{"version":3,"sources":["App.js"],"names":["ViewMain","React","lazy","View","ViewError","App","className","Fragment","fallback","path","component","exact","to","Component"],"mappings":"wLAQMA,EAAWC,IAAMC,MAAK,kBAC1B,gCAEIC,EAAOF,IAAMC,MAAK,kBACtB,gCAGIE,EAAYH,IAAMC,MAAK,kBAC3B,gCAGIG,E,4JACJ,WACE,OACE,qBAAKC,UAAU,QAAf,SACE,cAAC,IAAMC,SAAP,UACE,cAAC,WAAD,CAAUC,SAAU,qBAAKF,UAAU,YAAnC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAK,OAAOC,UAAWV,IAC9B,cAAC,IAAD,CAAOS,KAAK,IAAIE,OAAK,EAACD,UAAWP,IACjC,cAAC,IAAD,CAAOM,KAAK,SAASE,OAAK,EAACD,UAAWN,IACtC,cAAC,IAAD,CAAUQ,GAAG,0B,GAXXC,aAqBHR","file":"static/js/App.4d76c5e2.chunk.js","sourcesContent":["import React, { Component, Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nconst ViewMain = React.lazy(() =>\n  import(/* webpackChunkName: \"views\" */ \"./views/app\")\n);\nconst View = React.lazy(() =>\n  import(/* webpackChunkName: \"views\" */ \"./views\")\n);\n\nconst ViewError = React.lazy(() =>\n  import(/* webpackChunkName: \"views-error\" */ \"./views/error\")\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"h-100\">\n        <React.Fragment>\n          <Suspense fallback={<div className=\"loading\" />}>\n            <Router>\n              <Switch>\n                <Route path=\"/app\" component={ViewMain} />\n                <Route path=\"/\" exact component={View} />\n                <Route path=\"/error\" exact component={ViewError} />\n                <Redirect to=\"/error\" />\n              </Switch>\n            </Router>\n          </Suspense>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}